Create a world-class Live Tracking interface for monitoring vessels and refineries with a large, interactive map, modern embedded filters, and real-time analytics.

✅ Core Design Objectives:
Full-Screen Map-Centric Layout

Make the map the primary interface element (full width & height of viewport).

Ensure it is fast, smooth, and responsive.

Support Mapbox or Leaflet.js with custom map tiles and dark/light themes.

🧭 Key Features & UI Components:
🔍 1. Embedded Smart Filters (Inside Map UI – Floating Panel)
Floating left or right side panel or top bar with:

Product Type Selector (multi-select dropdown or pill-style chips: Crude, LNG, Diesel, etc.)

Company Filter (checkbox list with logos: Aramco, Rosneft, Total, etc.)

Region Selector (dropdown or click on map area)

Toggle: Show Refineries / Show Vessels

Toggle: Show Owned Assets Only (based on selected company)

Search Bar (find port, ship, or refinery by name or ID)

✅ Use smooth slide-in/out UI, blur background or glassmorphism style, and animated filter chips.

🗺️ 2. Map Layers & Interactions
Interactive region click ➜ Show modal or side drawer with:

Vessel list (mini cards or table view)

Refinery list

Region stats (vessel count, refinery count, product breakdown)

Layers Toggle:

Heatmap layer (vessel density)

Icons for vessels and refineries (with custom SVGs or emojis)

Clustered markers with zoom-based behavior

Live update indicators (e.g., pulsing dots or “LIVE” tag)

📊 3. Live Stats Dashboard (Overlay or Corner Widgets)
Mini live dashboard (fixed on bottom right or top left):

Total Vessels: 🔵 124

Total Refineries: 🛢️ 32

Vessels in Region: 🔴 19

Last Update: ⏱️ 12s ago

Style with rounded cards, soft shadows, and glowing indicators.

🧑‍💼 4. Company Highlights
On company selection, highlight their assets:

Branded markers (e.g., Aramco vessels in green)

Info card on hover or click (ship/refinery details, location, ETA)

Filter persists across map zoom

🎨 Design Style Suggestions
Design System: Tailwind CSS + ShadCN UI or Radix UI + Framer Motion

Look & Feel:

Clean, modern, dark/light mode toggle

Rounded corners, glassmorphism, subtle gradients

Use icon sets like Lucide or Tabler Icons

Animations for loading/filtering/map interactions

🛠️ Tech Stack Suggestions
Frontend: React + Mapbox GL JS or Leaflet

Backend/API: Use real-time API (e.g., WebSocket or polling every 5s)

Deployment: Optimize with caching/CDN; support mobile/tablet view