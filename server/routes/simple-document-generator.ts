import { Router } from 'express';
import { Request, Response } from 'express';
import PDFDocument from 'pdfkit';

const router = Router();

// Generate a simple PDF document that works reliably
router.post('/api/vessels/:id/simple-document', (req: Request, res: Response) => {
  try {
    const vesselId = parseInt(req.params.id);
    const documentType = req.body.documentType || 'Document';
    const vesselName = req.body.vesselName || 'Vessel';
    
    // Create a basic PDF document with simplified options
    const doc = new PDFDocument();
    
    // Set response headers for viewing in browser
    res.setHeader('Content-Type', 'application/pdf');
    res.setHeader('Content-Disposition', `inline; filename="${documentType}_${vesselName}.pdf"`);
    
    // Pipe the PDF directly to the response
    doc.pipe(res);
    
    // Add document content
    doc.fontSize(24)
      .text(documentType.toUpperCase(), {
        align: 'center'
      })
      .moveDown();
      
    doc.fontSize(18)
      .text(`Vessel: ${vesselName}`, {
        align: 'center'
      })
      .moveDown();
      
    // Add basic content based on document type
    doc.fontSize(12);
    
    if (documentType === 'Cargo Manifest') {
      doc.text(`Cargo: ${req.body.cargo || 'Crude Oil'}`)
         .text(`Quantity: ${req.body.quantity || '100,000'} barrels`)
         .text(`Origin: ${req.body.origin || 'N/A'}`)
         .text(`Destination: ${req.body.destination || 'N/A'}`)
         .moveDown()
         .text('This document certifies that the above cargo is loaded on this vessel.')
         .moveDown(2)
         .text('________________________')
         .text('Master Signature');
    } 
    else if (documentType === 'Bill of Lading') {
      doc.text(`B/L Number: ${Math.floor(Math.random() * 1000000)}`)
         .text(`Shipper: ${req.body.sellerName || 'ACME Oil Trading Ltd.'}`)
         .text(`Consignee: ${req.body.buyerName || 'Global Energy Corp.'}`)
         .text(`Cargo: ${req.body.cargo || 'Crude Oil'}`)
         .text(`Quantity: ${req.body.quantity || '100,000'} barrels`)
         .moveDown()
         .text('SHIPPED in apparent good order and condition. This Bill of Lading is evidence of the contract of carriage.')
         .moveDown(2)
         .text('________________________')
         .text('Authorized Signature');
    }
    else if (documentType === 'Certificate of Origin') {
      doc.text(`Certificate Number: CO-${Math.floor(Math.random() * 1000000)}`)
         .text(`Exporter: ${req.body.sellerName || 'ACME Oil Trading Ltd.'}`)
         .text(`Importer: ${req.body.buyerName || 'Global Energy Corp.'}`)
         .text(`Description: ${req.body.cargo || 'Crude Oil'}`)
         .text(`Country of Origin: ${req.body.origin?.split(',').pop()?.trim() || 'Saudi Arabia'}`)
         .moveDown()
         .text('The undersigned hereby declares that the above details are correct and that the goods originated in the country shown above.')
         .moveDown(2)
         .text('________________________')
         .text('Authorized Signature');
    }
    else {
      doc.text(`Document ID: DOC-${Math.floor(Math.random() * 1000000)}`)
         .text(`Vessel ID: ${vesselId}`)
         .text(`Date Generated: ${new Date().toLocaleDateString()}`)
         .moveDown()
         .text('This is an official vessel document generated by the PetroDealHub system.')
         .moveDown(2)
         .text('________________________')
         .text('Authorized Signature');
    }
    
    // Add footer
    doc.fontSize(10)
      .text(`Generated on ${new Date().toLocaleString()}`, {
        align: 'center'
      });
    
    // Finalize PDF
    doc.end();
    
  } catch (error) {
    console.error('Error generating simple document:', error);
    res.status(500).json({ 
      success: false, 
      message: 'Error generating document' 
    });
  }
});

export const simpleDocumentRouter = router;